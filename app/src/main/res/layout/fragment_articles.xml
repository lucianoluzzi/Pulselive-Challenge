<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:tools="http://schemas.android.com/tools">
    <data>
        <variable name="viewModel" type="br.com.lucianoluzzi.pulselivechallenge.viewModel.ArticleSummaryViewModel"/>
        <import type="br.com.lucianoluzzi.pulselivechallenge.model.ViewRequestState"/>
        <import type="android.view.View"/>
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
                                                       xmlns:app="http://schemas.android.com/apk/res-auto"
                                                       android:orientation="vertical"
                                                       android:layout_width="match_parent"
                                                       android:layout_height="match_parent"
                                                       android:background="@android:color/white">

        <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/articles"
                android:background="@android:color/darker_gray"
                app:layout_constraintTop_toTopOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:articles="@{ viewModel.articlesSummary }"
                android:visibility="@{ viewModel.viewState == ViewRequestState.SUCCESS ? View.VISIBLE : View.GONE }"
                android:layout_width="0dp"
                android:layout_height="0dp"
                tools:listitem="@layout/item_article_summary"/>

        <ProgressBar
                android:id="@+id/progress"
                app:layout_constraintTop_toTopOf="parent"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                android:visibility="@{ viewModel.viewState == ViewRequestState.LOADING ? View.VISIBLE : View.GONE }"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                tools:visibility="gone"
        />

        <include layout="@layout/layout_request_error"
                 android:id="@+id/error_layout"
                 android:layout_width="0dp"
                 android:layout_height="0dp"
                 android:visibility="@{ viewModel.viewState == ViewRequestState.ERROR ? View.VISIBLE : View.GONE }"
                 app:layout_constraintTop_toTopOf="parent"
                 app:layout_constraintBottom_toBottomOf="parent"
                 app:layout_constraintEnd_toEndOf="parent"
                 app:layout_constraintStart_toStartOf="parent"
                 tools:visibility="gone"
        />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>